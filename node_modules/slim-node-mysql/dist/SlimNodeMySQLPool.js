"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SlimNodeMySQLPool = void 0;
const mysql_1 = require("mysql");
const PreparedStatement_1 = require("./PreparedStatement");
class SlimNodeMySQLPool {
    constructor(config) {
        this.pool = (0, mysql_1.createPool)(config);
    }
    query(sql, parameters) {
        if (parameters) {
            const preparedStatement = new PreparedStatement_1.PreparedStatement(sql, parameters);
            const { preparedSql, preparedValues } = preparedStatement.prepare();
            return this.promiseQuery(preparedSql, preparedValues);
        }
        return this.promiseQuery(sql);
    }
    close() {
        var _a;
        (_a = this.pool) === null || _a === void 0 ? void 0 : _a.end();
    }
    promiseQuery(sql, preparedValues) {
        return new Promise((resolve, reject) => {
            this.pool.query(sql, preparedValues, (error, results) => {
                if (error) {
                    return reject(error);
                }
                return resolve(results);
            });
        });
    }
}
exports.SlimNodeMySQLPool = SlimNodeMySQLPool;
//# sourceMappingURL=SlimNodeMySQLPool.js.map