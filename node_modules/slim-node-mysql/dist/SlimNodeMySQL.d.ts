import { PoolConfig, OkPacket } from 'mysql';
import { SlimNodeMySQLPool } from './SlimNodeMySQLPool';
export declare type PreparedStatementParameters = Record<string, unknown>;
export declare class SlimNodeMySQL {
    protected pool: SlimNodeMySQLPool;
    constructor(config: string | PoolConfig);
    query<TableModel>(sql: string, parameters?: PreparedStatementParameters): Promise<TableModel[]>;
    execute(sql: string, parameters?: PreparedStatementParameters): Promise<OkPacket>;
    getOne<TableModel>(sql: string, parameters: PreparedStatementParameters): Promise<TableModel | null>;
    getValue<TableModel, K extends keyof TableModel>(column: K, sql: string, parameters: PreparedStatementParameters): Promise<TableModel[K] | null>;
    exists<TableModel>(sql: string, parameters: PreparedStatementParameters): Promise<boolean>;
    close(): void;
}
